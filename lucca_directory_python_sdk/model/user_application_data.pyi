# coding: utf-8

"""
    Directory-v3

    Welcome on the documentation for the Directory v3 API. 

    The version of the OpenAPI document: 1.0
    Contact: developers@lucca.fr
    Created by: https://www.lucca.fr
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from lucca_directory_python_sdk import schemas  # noqa: F401


class UserApplicationData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "profile_utime",
            "profile_figgo",
        }
        
        class properties:
        
            @staticmethod
            def profile_figgo() -> typing.Type['UserApplicationDataProfileFiggo']:
                return UserApplicationDataProfileFiggo
        
            @staticmethod
            def profile_utime() -> typing.Type['UserApplicationDataProfileUtime']:
                return UserApplicationDataProfileUtime
            __annotations__ = {
                "profile_figgo": profile_figgo,
                "profile_utime": profile_utime,
            }
    
    profile_utime: 'UserApplicationDataProfileUtime'
    profile_figgo: 'UserApplicationDataProfileFiggo'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profile_figgo"]) -> 'UserApplicationDataProfileFiggo': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profile_utime"]) -> 'UserApplicationDataProfileUtime': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["profile_figgo", "profile_utime", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profile_figgo"]) -> 'UserApplicationDataProfileFiggo': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profile_utime"]) -> 'UserApplicationDataProfileUtime': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["profile_figgo", "profile_utime", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        profile_utime: 'UserApplicationDataProfileUtime',
        profile_figgo: 'UserApplicationDataProfileFiggo',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UserApplicationData':
        return super().__new__(
            cls,
            *args,
            profile_utime=profile_utime,
            profile_figgo=profile_figgo,
            _configuration=_configuration,
            **kwargs,
        )

from lucca_directory_python_sdk.model.user_application_data_profile_figgo import UserApplicationDataProfileFiggo
from lucca_directory_python_sdk.model.user_application_data_profile_utime import UserApplicationDataProfileUtime
